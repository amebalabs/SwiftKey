[
  {
    "id": "developer/devtools-toolkit",
    "name": "Developer Tools Toolkit",
    "description": "A collection of essential developer tools and shortcuts for macOS, including IDE launchers, git commands, and Docker controls.",
    "author": "SwiftKey",
    "tags": ["development", "git", "docker", "ide"],
    "created": "2024-06-10",
    "content": "# Developer tools and IDE shortcuts\n- key: \"d\"\n  icon: \"terminal.fill\"\n  title: \"Developer Tools\"\n  submenu:\n    - key: \"x\"\n      title: \"Xcode\"\n      action: \"launch:///Applications/Xcode.app\"\n    - key: \"v\"\n      title: \"Visual Studio Code\"\n      action: \"launch:///Applications/Visual Studio Code.app\"\n    - key: \"i\"\n      title: \"IntelliJ IDEA\"\n      action: \"launch:///Applications/IntelliJ IDEA.app\"\n    - key: \"g\"\n      title: \"Git Commands\"\n      submenu:\n        - key: \"p\"\n          title: \"Pull\"\n          action: \"shell://git pull\"\n          notify: true\n        - key: \"s\"\n          title: \"Status\"\n          action: \"shell://git status\"\n          notify: true\n        - key: \"c\"\n          title: \"Commit\"\n          action: \"shell://git commit -m \\\"Quick commit from SwiftKey\\\"\"\n          notify: true\n        - key: \"b\"\n          title: \"Checkout Branch\"\n          action: \"shell://git branch | fzf | xargs git checkout\"\n          notify: true\n    - key: \"d\"\n      title: \"Docker\"\n      submenu:\n        - key: \"p\"\n          title: \"Docker ps\"\n          action: \"shell://docker ps\"\n          notify: true\n        - key: \"i\"\n          title: \"Docker images\"\n          action: \"shell://docker images\"\n          notify: true\n        - key: \"c\"\n          title: \"Docker compose up\"\n          action: \"shell://docker-compose up -d\"\n          notify: true",
    "previewImageURL": "previews/devtools-toolkit.png"
  },
  {
    "id": "productivity/quick-apps",
    "name": "Quick App Launcher",
    "description": "A simple app launcher for your most frequently used applications, organized by category with custom icons.",
    "author": "SwiftKey",
    "tags": ["productivity", "launcher", "apps"],
    "created": "2024-05-15",
    "content": "# Quick app launcher by category\n- key: \"a\"\n  icon: \"app.fill\"\n  title: \"Applications\"\n  submenu:\n    - key: \"b\"\n      icon: \"safari\"\n      title: \"Browsers\"\n      submenu:\n        - key: \"s\"\n          title: \"Safari\"\n          action: \"launch:///Applications/Safari.app\"\n        - key: \"c\"\n          title: \"Chrome\"\n          action: \"launch:///Applications/Google Chrome.app\"\n        - key: \"f\"\n          title: \"Firefox\"\n          action: \"launch:///Applications/Firefox.app\"\n    - key: \"p\"\n      icon: \"doc.text\"\n      title: \"Productivity\"\n      submenu:\n        - key: \"p\"\n          title: \"Preview\"\n          action: \"launch:///System/Applications/Preview.app\"\n        - key: \"n\"\n          title: \"Notes\"\n          action: \"launch:///System/Applications/Notes.app\"\n        - key: \"c\"\n          title: \"Calculator\"\n          action: \"launch:///System/Applications/Calculator.app\"\n    - key: \"u\"\n      icon: \"hammer.fill\"\n      title: \"Utilities\"\n      submenu:\n        - key: \"a\"\n          title: \"Activity Monitor\"\n          action: \"launch:///Applications/Utilities/Activity Monitor.app\"\n        - key: \"d\"\n          title: \"Disk Utility\"\n          action: \"launch:///Applications/Utilities/Disk Utility.app\"\n        - key: \"t\"\n          title: \"Terminal\"\n          action: \"launch:///Applications/Utilities/Terminal.app\"",
    "previewImageURL": "previews/quick-apps.png"
  },
  {
    "id": "system/mac-utils",
    "name": "macOS System Utilities",
    "description": "Essential macOS system controls and utilities, including display settings, sound controls, and power management options.",
    "author": "SwiftKey",
    "tags": ["system", "macos", "utilities"],
    "created": "2024-04-22",
    "updated": "2024-05-30",
    "content": "# macOS system utilities and controls\n- key: \"s\"\n  icon: \"gearshape.fill\"\n  title: \"System\"\n  submenu:\n    - key: \"d\"\n      icon: \"display\"\n      title: \"Display\"\n      submenu:\n        - key: \"n\"\n          title: \"Night Shift Toggle\"\n          action: \"shell://osascript -e 'tell application \\\"System Events\\\" to tell appearance preferences to set dark mode to not dark mode'\"\n          notify: true\n        - key: \"b\"\n          title: \"Brightness Up\"\n          action: \"shell://osascript -e 'tell application \\\"System Events\\\" to key code 144'\"\n          notify: true\n        - key: \"d\"\n          title: \"Brightness Down\"\n          action: \"shell://osascript -e 'tell application \\\"System Events\\\" to key code 145'\"\n          notify: true\n    - key: \"a\"\n      icon: \"speaker.wave.3.fill\"\n      title: \"Audio\"\n      submenu:\n        - key: \"u\"\n          title: \"Volume Up\"\n          action: \"shell://osascript -e 'set volume output volume (output volume of (get volume settings) + 10)'\"\n          notify: true\n        - key: \"d\"\n          title: \"Volume Down\"\n          action: \"shell://osascript -e 'set volume output volume (output volume of (get volume settings) - 10)'\"\n          notify: true\n        - key: \"m\"\n          title: \"Mute Toggle\"\n          action: \"shell://osascript -e 'set volume with output muted not (output muted of (get volume settings))'\"\n          notify: true\n    - key: \"p\"\n      icon: \"bolt.fill\"\n      title: \"Power\"\n      submenu:\n        - key: \"s\"\n          title: \"Sleep\"\n          action: \"shell://pmset sleepnow\"\n          notify: true\n        - key: \"r\"\n          title: \"Restart\"\n          action: \"shell://osascript -e 'tell app \\\"System Events\\\" to restart'\"\n          notify: true\n        - key: \"o\"\n          title: \"Shut Down\"\n          action: \"shell://osascript -e 'tell app \\\"System Events\\\" to shut down'\"\n          notify: true",
    "previewImageURL": "previews/mac-utils.png"
  },
  {
    "id": "media/quick-controls",
    "name": "Media Quick Controls",
    "description": "Media playback controls for various media players, including Spotify, Apple Music, and YouTube.",
    "author": "SwiftKey",
    "tags": ["media", "spotify", "apple music", "youtube"],
    "created": "2024-06-01",
    "content": "# Media playback controls for popular players\n- key: \"m\"\n  icon: \"music.note\"\n  title: \"Media Controls\"\n  submenu:\n    - key: \"p\"\n      icon: \"play.fill\"\n      title: \"Play/Pause\"\n      action: \"shell://osascript -e 'tell application \\\"Spotify\\\" to playpause'\"\n      notify: true\n    - key: \"n\"\n      icon: \"forward.fill\"\n      title: \"Next Track\"\n      action: \"shell://osascript -e 'tell application \\\"Spotify\\\" to next track'\"\n      notify: true\n    - key: \"b\"\n      icon: \"backward.fill\"\n      title: \"Previous Track\"\n      action: \"shell://osascript -e 'tell application \\\"Spotify\\\" to previous track'\"\n      notify: true\n    - key: \"v\"\n      icon: \"speaker.wave.2.fill\"\n      title: \"Volume Controls\"\n      submenu:\n        - key: \"u\"\n          title: \"Volume Up\"\n          action: \"shell://osascript -e 'set volume output volume (output volume of (get volume settings) + 10)'\"\n          notify: true\n        - key: \"d\"\n          title: \"Volume Down\"\n          action: \"shell://osascript -e 'set volume output volume (output volume of (get volume settings) - 10)'\"\n          notify: true\n        - key: \"m\"\n          title: \"Mute Toggle\"\n          action: \"shell://osascript -e 'set volume with output muted not (output muted of (get volume settings))'\"\n          notify: true\n    - key: \"a\"\n      icon: \"music.note\"\n      title: \"Applications\"\n      submenu:\n        - key: \"s\"\n          title: \"Spotify\"\n          action: \"launch:///Applications/Spotify.app\"\n        - key: \"m\"\n          title: \"Apple Music\"\n          action: \"launch:///System/Applications/Music.app\"\n        - key: \"y\"\n          title: \"YouTube Music\"\n          action: \"open://https://music.youtube.com\"",
    "previewImageURL": "previews/quick-controls.png"
  },
  {
    "id": "web/bookmarks",
    "name": "Web Bookmarks Collection",
    "description": "A collection of useful website bookmarks organized by category, including news, social media, and productivity tools.",
    "author": "SwiftKey",
    "tags": ["web", "bookmarks", "productivity"],
    "created": "2024-03-15",
    "content": "# Organized web bookmarks by category\n- key: \"w\"\n  icon: \"globe\"\n  title: \"Web Bookmarks\"\n  submenu:\n    - key: \"n\"\n      icon: \"newspaper\"\n      title: \"News\"\n      submenu:\n        - key: \"c\"\n          title: \"CNN\"\n          action: \"open://https://www.cnn.com\"\n        - key: \"b\"\n          title: \"BBC\"\n          action: \"open://https://www.bbc.com\"\n        - key: \"r\"\n          title: \"Reuters\"\n          action: \"open://https://www.reuters.com\"\n    - key: \"s\"\n      icon: \"person.2.fill\"\n      title: \"Social Media\"\n      submenu:\n        - key: \"t\"\n          title: \"Twitter\"\n          action: \"open://https://twitter.com\"\n        - key: \"l\"\n          title: \"LinkedIn\"\n          action: \"open://https://www.linkedin.com\"\n        - key: \"r\"\n          title: \"Reddit\"\n          action: \"open://https://www.reddit.com\"\n    - key: \"p\"\n      icon: \"checklist\"\n      title: \"Productivity\"\n      submenu:\n        - key: \"t\"\n          title: \"Trello\"\n          action: \"open://https://trello.com\"\n        - key: \"n\"\n          title: \"Notion\"\n          action: \"open://https://www.notion.so\"\n        - key: \"g\"\n          title: \"Google Drive\"\n          action: \"open://https://drive.google.com\"\n    - key: \"d\"\n      icon: \"desktopcomputer\"\n      title: \"Dev Resources\"\n      submenu:\n        - key: \"g\"\n          title: \"GitHub\"\n          action: \"open://https://github.com\"\n        - key: \"s\"\n          title: \"Stack Overflow\"\n          action: \"open://https://stackoverflow.com\"\n        - key: \"m\"\n          title: \"MDN Web Docs\"\n          action: \"open://https://developer.mozilla.org\"",
    "previewImageURL": "previews/web-bookmarks.png"
  },
  {
    "id": "development/terminal-shortcuts",
    "name": "Terminal Command Shortcuts",
    "description": "A collection of useful terminal commands and shortcuts for developers, including file operations, process management, and network diagnostics.",
    "author": "SwiftKey",
    "tags": ["terminal", "development", "commands", "productivity"],
    "created": "2024-06-15",
    "content": "# Terminal commands and shortcuts\n- key: \"t\"\n  icon: \"terminal\"\n  title: \"Terminal Shortcuts\"\n  submenu:\n    - key: \"f\"\n      icon: \"folder\"\n      title: \"File Operations\"\n      submenu:\n        - key: \"l\"\n          title: \"List Files (ls -la)\"\n          action: \"shell://ls -la\"\n          notify: true\n        - key: \"d\"\n          title: \"Disk Usage (du -h)\"\n          action: \"shell://du -h -d 1 | sort -hr\"\n          notify: true\n        - key: \"f\"\n          title: \"Find Large Files\"\n          action: \"shell://find . -type f -size +100M -exec ls -lh {} \\;\"\n          notify: true\n    - key: \"p\"\n      icon: \"cpu\"\n      title: \"Process Management\"\n      submenu:\n        - key: \"t\"\n          title: \"Top Processes\"\n          action: \"shell://ps aux | head -10\"\n          notify: true\n        - key: \"m\"\n          title: \"Memory Usage\"\n          action: \"shell://vm_stat\"\n          notify: true\n        - key: \"k\"\n          title: \"Kill Process by Name\"\n          action: \"shell://read -p 'Process name to kill: ' PROC && pkill \"$PROC\"\"\n          notify: true\n    - key: \"n\"\n      icon: \"network\"\n      title: \"Network\"\n      submenu:\n        - key: \"i\"\n          title: \"IP Information\"\n          action: \"shell://ifconfig | grep inet\"\n          notify: true\n        - key: \"p\"\n          title: \"Ping Google\"\n          action: \"shell://ping -c 5 google.com\"\n          notify: true\n        - key: \"o\"\n          title: \"Open Ports\"\n          action: \"shell://lsof -i -P | grep LISTEN\"\n          notify: true",
    "previewImageURL": "previews/terminal-shortcuts.png"
  },
  {
    "id": "utility/clipboard-manager",
    "name": "Clipboard Manager",
    "description": "A simple clipboard manager to store and retrieve clipboard history with quick access to frequently used text snippets.",
    "author": "SwiftKey",
    "tags": ["utility", "clipboard", "productivity"],
    "created": "2024-06-18",
    "content": "# Clipboard history and quick text snippets\n- key: \"c\"\n  icon: \"doc.on.clipboard\"\n  title: \"Clipboard Manager\"\n  submenu:\n    - key: \"h\"\n      icon: \"clock\"\n      title: \"Clipboard History\"\n      submenu:\n        - key: \"1\"\n          title: \"Copy to History Slot 1\"\n          action: \"shell://osascript -e 'tell application \\\"System Events\\\" to set the clipboard to (the clipboard)' && defaults write com.swiftkey.app clipboard.slot1 -string \"$(pbpaste)\"\"\n          notify: true\n        - key: \"2\"\n          title: \"Copy to History Slot 2\"\n          action: \"shell://osascript -e 'tell application \\\"System Events\\\" to set the clipboard to (the clipboard)' && defaults write com.swiftkey.app clipboard.slot2 -string \"$(pbpaste)\"\"\n          notify: true\n        - key: \"3\"\n          title: \"Copy to History Slot 3\"\n          action: \"shell://osascript -e 'tell application \\\"System Events\\\" to set the clipboard to (the clipboard)' && defaults write com.swiftkey.app clipboard.slot3 -string \"$(pbpaste)\"\"\n          notify: true\n    - key: \"p\"\n      icon: \"arrow.down.doc\"\n      title: \"Paste From History\"\n      submenu:\n        - key: \"1\"\n          title: \"Paste From Slot 1\"\n          action: \"shell://defaults read com.swiftkey.app clipboard.slot1 2>/dev/null | pbcopy\"\n          notify: true\n        - key: \"2\"\n          title: \"Paste From Slot 2\"\n          action: \"shell://defaults read com.swiftkey.app clipboard.slot2 2>/dev/null | pbcopy\"\n          notify: true\n        - key: \"3\"\n          title: \"Paste From Slot 3\"\n          action: \"shell://defaults read com.swiftkey.app clipboard.slot3 2>/dev/null | pbcopy\"\n          notify: true\n    - key: \"t\"\n      icon: \"text.badge.plus\"\n      title: \"Text Snippets\"\n      submenu:\n        - key: \"e\"\n          title: \"Email Signature\"\n          action: \"text://Best regards,\\n[Your Name]\\n[Your Position]\\n[Your Contact Info]\"\n        - key: \"m\"\n          title: \"Meeting Template\"\n          action: \"text://Meeting: [Title]\\nDate: [Date]\\nAttendees: [Attendees]\\nAgenda:\\n1. \\n2. \\n3. \"\n        - key: \"t\"\n          title: \"Thank You\"\n          action: \"text://Thank you for your assistance. I really appreciate your help with this matter.\"",
    "previewImageURL": "previews/clipboard-manager.png"
  },
  {
    "id": "utility/screen-capture",
    "name": "Screen Capture Tools",
    "description": "A collection of screen capture tools and shortcuts for macOS, including screenshot commands, screen recording, and annotation tools.",
    "author": "SwiftKey",
    "tags": ["utility", "screen capture", "screenshots", "recording"],
    "created": "2024-06-20",
    "content": "# Screen capture and recording tools\n- key: \"s\"\n  icon: \"camera.fill\"\n  title: \"Screen Capture\"\n  submenu:\n    - key: \"s\"\n      icon: \"camera.viewfinder\"\n      title: \"Screenshots\"\n      submenu:\n        - key: \"f\"\n          title: \"Full Screen\"\n          action: \"shell://screencapture -x ~/Desktop/screenshot-$(date +%Y%m%d-%H%M%S).png\"\n          notify: true\n        - key: \"w\"\n          title: \"Window (Interactive)\"\n          action: \"shell://screencapture -iw ~/Desktop/window-$(date +%Y%m%d-%H%M%S).png\"\n          notify: true\n        - key: \"a\"\n          title: \"Area Selection\"\n          action: \"shell://screencapture -is ~/Desktop/selection-$(date +%Y%m%d-%H%M%S).png\"\n          notify: true\n        - key: \"c\"\n          title: \"Copy to Clipboard\"\n          action: \"shell://screencapture -ic\"\n          notify: true\n    - key: \"r\"\n      icon: \"record.circle\"\n      title: \"Screen Recording\"\n      submenu:\n        - key: \"f\"\n          title: \"Record Full Screen\"\n          action: \"shell://osascript -e 'tell application \\\"QuickTime Player\\\" to new screen recording' -e 'delay 0.5' -e 'tell application \\\"System Events\\\" to keystroke space'\"\n          notify: true\n        - key: \"s\"\n          title: \"Stop Recording\"\n          action: \"shell://osascript -e 'tell application \\\"System Events\\\" to keystroke q using {command down}'\"\n          notify: true\n    - key: \"a\"\n      icon: \"pencil.and.outline\"\n      title: \"Annotation\"\n      submenu:\n        - key: \"p\"\n          title: \"Open in Preview\"\n          action: \"shell://screencapture -ic && osascript -e 'tell application \\\"Preview\\\" to activate'\"\n          notify: true\n        - key: \"k\"\n          title: \"Markup in Preview\"\n          action: \"shell://screencapture -icp && osascript -e 'tell application \\\"Preview\\\" to activate' -e 'delay 0.5' -e 'tell application \\\"System Events\\\" to keystroke \\\"a\\\" using {command down, shift down}'\"\n          notify: true",
    "previewImageURL": "previews/screen-capture.png"
  },
  {
    "id": "utility/file-operations",
    "name": "File Operations Toolkit",
    "description": "A collection of file operations and management tools for macOS, including file finding, zip/unzip, batch renaming, and cleanup utilities.",
    "author": "SwiftKey",
    "tags": ["utility", "files", "file management"],
    "created": "2024-06-25",
    "content": "# File operations and management tools\n- key: \"f\"\n  icon: \"folder.fill\"\n  title: \"File Operations\"\n  submenu:\n    - key: \"s\"\n      icon: \"magnifyingglass\"\n      title: \"Search\"\n      submenu:\n        - key: \"n\"\n          title: \"Find by Name\"\n          action: \"shell://read -p 'Enter filename pattern: ' PATTERN && find . -name \"*$PATTERN*\" -type f | head -20\"\n          notify: true\n        - key: \"t\"\n          title: \"Find by Type\"\n          action: \"shell://read -p 'Enter file extension: ' EXT && find . -name \"*.$EXT\" -type f | head -20\"\n          notify: true\n        - key: \"c\"\n          title: \"Find Content in Files\"\n          action: \"shell://read -p 'Enter text to search for: ' SEARCH && grep -r \"$SEARCH\" --include=\"*.txt\" .\"\n          notify: true\n    - key: \"z\"\n      icon: \"archivebox.fill\"\n      title: \"Zip/Unzip\"\n      submenu:\n        - key: \"z\"\n          title: \"Zip Current Directory\"\n          action: \"shell://zip -r $(basename $(pwd)).zip .\"\n          notify: true\n        - key: \"u\"\n          title: \"Unzip File\"\n          action: \"shell://read -p 'Enter zip filename: ' ZIPFILE && unzip \"$ZIPFILE\"\"\n          notify: true\n    - key: \"c\"\n      icon: \"trash\"\n      title: \"Cleanup\"\n      submenu:\n        - key: \"t\"\n          title: \"Delete Temp Files\"\n          action: \"shell://find . -name \"*.tmp\" -type f -delete\"\n          notify: true\n        - key: \"d\"\n          title: \"Find Duplicate Files\"\n          action: \"shell://find . -type f -exec md5 {} \\; | sort | uniq -d -w32\"\n          notify: true\n        - key: \"e\"\n          title: \"Empty Trash\"\n          action: \"shell://osascript -e 'tell application \\\"Finder\\\" to empty trash'\"\n          notify: true",
    "previewImageURL": "previews/file-operations.png"
  },
  {
    "id": "productivity/meeting-tools",
    "name": "Meeting Tools",
    "description": "A collection of tools for managing meetings, including timers, note templates, zoom controls, and agenda helpers.",
    "author": "SwiftKey",
    "tags": ["productivity", "meetings", "collaboration"],
    "created": "2024-07-01",
    "content": "# Meeting management and productivity tools\n- key: \"m\"\n  icon: \"person.3.fill\"\n  title: \"Meeting Tools\"\n  submenu:\n    - key: \"t\"\n      icon: \"timer\"\n      title: \"Timers\"\n      submenu:\n        - key: \"5\"\n          title: \"5 Minute Timer\"\n          action: \"shell://osascript -e 'display notification \\\"5 minute timer started\\\" with title \\\"Meeting Timer\\\"' && sleep 300 && osascript -e 'display notification \\\"Time is up!\\\" with title \\\"Meeting Timer\\\" sound name \\\"Glass\\\"'\"\n          notify: true\n        - key: \"1\"\n          title: \"15 Minute Timer\"\n          action: \"shell://osascript -e 'display notification \\\"15 minute timer started\\\" with title \\\"Meeting Timer\\\"' && sleep 900 && osascript -e 'display notification \\\"Time is up!\\\" with title \\\"Meeting Timer\\\" sound name \\\"Glass\\\"'\"\n          notify: true\n        - key: \"3\"\n          title: \"30 Minute Timer\"\n          action: \"shell://osascript -e 'display notification \\\"30 minute timer started\\\" with title \\\"Meeting Timer\\\"' && sleep 1800 && osascript -e 'display notification \\\"Time is up!\\\" with title \\\"Meeting Timer\\\" sound name \\\"Glass\\\"'\"\n          notify: true\n    - key: \"n\"\n      icon: \"note.text\"\n      title: \"Notes\"\n      submenu:\n        - key: \"c\"\n          title: \"Create Meeting Notes\"\n          action: \"shell://cat > ~/Desktop/meeting_notes_$(date +%Y%m%d).md << 'EOF'\\n# Meeting Notes: $(date +%Y-%m-%d)\\n\\n## Attendees\\n- \\n\\n## Agenda\\n1. \\n2. \\n3. \\n\\n## Discussion\\n\\n\\n## Action Items\\n- [ ] \\n- [ ] \\n\\n## Next Steps\\n\\nEOF\\n&& open ~/Desktop/meeting_notes_$(date +%Y%m%d).md\"\n          notify: true\n        - key: \"a\"\n          title: \"Add Action Item\"\n          action: \"text://- [ ] Action: \\n  Assigned to: \\n  Due date: \"\n    - key: \"z\"\n      icon: \"video\"\n      title: \"Zoom Controls\"\n      submenu:\n        - key: \"m\"\n          title: \"Toggle Mute\"\n          action: \"shell://osascript -e 'tell application \\\"System Events\\\" to keystroke \\\"a\\\" using {command down, shift down}'\"\n          notify: true\n        - key: \"v\"\n          title: \"Toggle Video\"\n          action: \"shell://osascript -e 'tell application \\\"System Events\\\" to keystroke \\\"v\\\" using {command down, shift down}'\"\n          notify: true\n        - key: \"s\"\n          title: \"Start/Stop Screen Share\"\n          action: \"shell://osascript -e 'tell application \\\"System Events\\\" to keystroke \\\"s\\\" using {command down, shift down}'\"\n          notify: true",
    "previewImageURL": "previews/meeting-tools.png"
  },
  {
    "id": "network/network-tools",
    "name": "Network Diagnostic Tools",
    "description": "A collection of network diagnostic and monitoring tools, including ping, traceroute, DNS lookup, and network speed tests.",
    "author": "SwiftKey",
    "tags": ["network", "diagnostics", "utilities"],
    "created": "2024-07-05",
    "content": "# Network diagnostics and monitoring tools\n- key: \"n\"\n  icon: \"network\"\n  title: \"Network Tools\"\n  submenu:\n    - key: \"d\"\n      icon: \"dial.min\"\n      title: \"Diagnostics\"\n      submenu:\n        - key: \"p\"\n          title: \"Ping Google DNS\"\n          action: \"shell://ping -c 5 8.8.8.8\"\n          notify: true\n        - key: \"t\"\n          title: \"Traceroute\"\n          action: \"shell://traceroute google.com\"\n          notify: true\n        - key: \"f\"\n          title: \"Flush DNS Cache\"\n          action: \"shell://sudo dscacheutil -flushcache; sudo killall -HUP mDNSResponder\"\n          notify: true\n    - key: \"i\"\n      icon: \"info.circle\"\n      title: \"Network Info\"\n      submenu:\n        - key: \"i\"\n          title: \"IP Address (Local)\"\n          action: \"shell://ipconfig getifaddr en0\"\n          notify: true\n        - key: \"e\"\n          title: \"External IP\"\n          action: \"shell://curl -s https://api.ipify.org\"\n          notify: true\n        - key: \"d\"\n          title: \"DNS Servers\"\n          action: \"shell://scutil --dns | grep 'nameserver\\[[0-9]*\\]'\"\n          notify: true\n        - key: \"r\"\n          title: \"Routing Table\"\n          action: \"shell://netstat -nr\"\n          notify: true\n    - key: \"s\"\n      icon: \"speedometer\"\n      title: \"Speed Test\"\n      submenu:\n        - key: \"f\"\n          title: \"Fast.com\"\n          action: \"open://https://fast.com\"\n        - key: \"o\"\n          title: \"Ookla Speedtest\"\n          action: \"open://https://www.speedtest.net\"\n        - key: \"c\"\n          title: \"Terminal Speed Test\"\n          action: \"shell://curl -s https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py | python -\"\n          notify: true",
    "previewImageURL": "previews/network-tools.png"
  },
  {
    "id": "text/text-tools",
    "name": "Text Manipulation Tools",
    "description": "A collection of text manipulation tools for quickly transforming, encoding, and formatting text directly from your clipboard.",
    "author": "SwiftKey",
    "tags": ["text", "format", "utility"],
    "created": "2024-07-10",
    "content": "# Text transformation and formatting tools\n- key: \"x\"\n  icon: \"text.format\"\n  title: \"Text Tools\"\n  submenu:\n    - key: \"c\"\n      icon: \"arrow.left.arrow.right\"\n      title: \"Case Conversion\"\n      submenu:\n        - key: \"u\"\n          title: \"UPPERCASE\"\n          action: \"shell://pbpaste | tr '[:lower:]' '[:upper:]' | pbcopy && osascript -e 'display notification \\\"Text converted to uppercase\\\" with title \\\"Text Tools\\\"'\"\n          notify: true\n        - key: \"l\"\n          title: \"lowercase\"\n          action: \"shell://pbpaste | tr '[:upper:]' '[:lower:]' | pbcopy && osascript -e 'display notification \\\"Text converted to lowercase\\\" with title \\\"Text Tools\\\"'\"\n          notify: true\n        - key: \"t\"\n          title: \"Title Case\"\n          action: \"shell://pbpaste | python3 -c 'import sys; print(\\\" \\\".join(w.capitalize() for w in sys.stdin.read().split()))' | pbcopy && osascript -e 'display notification \\\"Text converted to title case\\\" with title \\\"Text Tools\\\"'\"\n          notify: true\n    - key: \"e\"\n      icon: \"lock\"\n      title: \"Encode/Decode\"\n      submenu:\n        - key: \"u\"\n          title: \"URL Encode\"\n          action: \"shell://pbpaste | python3 -c 'import sys, urllib.parse; print(urllib.parse.quote(sys.stdin.read().strip()))' | pbcopy && osascript -e 'display notification \\\"Text URL encoded\\\" with title \\\"Text Tools\\\"'\"\n          notify: true\n        - key: \"d\"\n          title: \"URL Decode\"\n          action: \"shell://pbpaste | python3 -c 'import sys, urllib.parse; print(urllib.parse.unquote(sys.stdin.read().strip()))' | pbcopy && osascript -e 'display notification \\\"Text URL decoded\\\" with title \\\"Text Tools\\\"'\"\n          notify: true\n        - key: \"b\"\n          title: \"Base64 Encode\"\n          action: \"shell://pbpaste | base64 | pbcopy && osascript -e 'display notification \\\"Text Base64 encoded\\\" with title \\\"Text Tools\\\"'\"\n          notify: true\n        - key: \"6\"\n          title: \"Base64 Decode\"\n          action: \"shell://pbpaste | base64 --decode | pbcopy && osascript -e 'display notification \\\"Text Base64 decoded\\\" with title \\\"Text Tools\\\"'\"\n          notify: true\n    - key: \"f\"\n      icon: \"wand.and.stars\"\n      title: \"Format\"\n      submenu:\n        - key: \"j\"\n          title: \"Format JSON\"\n          action: \"shell://pbpaste | python3 -m json.tool | pbcopy && osascript -e 'display notification \\\"JSON formatted\\\" with title \\\"Text Tools\\\"'\"\n          notify: true\n        - key: \"x\"\n          title: \"Format XML\"\n          action: \"shell://pbpaste | python3 -c 'import sys, xml.dom.minidom; print(xml.dom.minidom.parseString(sys.stdin.read()).toprettyxml())' | pbcopy && osascript -e 'display notification \\\"XML formatted\\\" with title \\\"Text Tools\\\"'\"\n          notify: true\n        - key: \"s\"\n          title: \"Strip Whitespace\"\n          action: \"shell://pbpaste | sed 's/^[ \\t]*//;s/[ \\t]*$//' | pbcopy && osascript -e 'display notification \\\"Whitespace stripped\\\" with title \\\"Text Tools\\\"'\"\n          notify: true",
    "previewImageURL": "previews/text-tools.png"
  },
  {
    "id": "development/code-snippets",
    "name": "Code Snippets Library",
    "description": "A collection of frequently used code snippets for various programming languages, ready to be pasted into your editor.",
    "author": "SwiftKey",
    "tags": ["development", "code", "snippets", "programming"],
    "created": "2024-07-15",
    "content": "# Programming code snippets\n- key: \"{\"\n  icon: \"chevron.left.forwardslash.chevron.right\"\n  title: \"Code Snippets\"\n  submenu:\n    - key: \"h\"\n      icon: \"h.square\"\n      title: \"HTML\"\n      submenu:\n        - key: \"b\"\n          title: \"Basic Template\"\n          action: \"text://<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n    <meta charset=\\\"UTF-8\\\">\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n    <title>Document</title>\\n    <link rel=\\\"stylesheet\\\" href=\\\"styles.css\\\">\\n</head>\\n<body>\\n    \\n    <script src=\\\"script.js\\\"></script>\\n</body>\\n</html>\"\n        - key: \"f\"\n          title: \"Form Template\"\n          action: \"text://<form action=\\\"\\\" method=\\\"post\\\">\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\">Name:</label>\\n        <input type=\\\"text\\\" id=\\\"name\\\" name=\\\"name\\\" required>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\">Email:</label>\\n        <input type=\\\"email\\\" id=\\\"email\\\" name=\\\"email\\\" required>\\n    </div>\\n    <button type=\\\"submit\\\">Submit</button>\\n</form>\"\n    - key: \"j\"\n      icon: \"j.square\"\n      title: \"JavaScript\"\n      submenu:\n        - key: \"f\"\n          title: \"Fetch API\"\n          action: \"text://fetch('https://api.example.com/data')\\n    .then(response => {\\n        if (!response.ok) {\\n            throw new Error('Network response was not ok');\\n        }\\n        return response.json();\\n    })\\n    .then(data => {\\n        console.log(data);\\n    })\\n    .catch(error => {\\n        console.error('There was a problem with the fetch operation:', error);\\n    });\"\n        - key: \"a\"\n          title: \"Async/Await\"\n          action: \"text://async function fetchData() {\\n    try {\\n        const response = await fetch('https://api.example.com/data');\\n        if (!response.ok) {\\n            throw new Error('Network response was not ok');\\n        }\\n        const data = await response.json();\\n        return data;\\n    } catch (error) {\\n        console.error('There was a problem with the fetch operation:', error);\\n    }\\n}\\n\\n// Usage\\nfetchData().then(data => {\\n    console.log(data);\\n});\"\n    - key: \"s\"\n      icon: \"s.square\"\n      title: \"Swift\"\n      submenu:\n        - key: \"v\"\n          title: \"SwiftUI View\"\n          action: \"text://import SwiftUI\\n\\nstruct ContentView: View {\\n    var body: some View {\\n        VStack {\\n            Text(\\\"Hello, World!\\\")\\n                .font(.title)\\n                .padding()\\n            \\n            Button(\\\"Tap me\\\") {\\n                // Action\\n            }\\n            .padding()\\n            .background(Color.blue)\\n            .foregroundColor(.white)\\n            .cornerRadius(10)\\n        }\\n    }\\n}\\n\\nstruct ContentView_Previews: PreviewProvider {\\n    static var previews: some View {\\n        ContentView()\\n    }\\n}\"\n        - key: \"n\"\n          title: \"Network Request\"\n          action: \"text://func fetchData() async throws -> [Item] {\\n    guard let url = URL(string: \\\"https://api.example.com/items\\\") else {\\n        throw URLError(.badURL)\\n    }\\n    \\n    let (data, response) = try await URLSession.shared.data(from: url)\\n    \\n    guard let httpResponse = response as? HTTPURLResponse,\\n          httpResponse.statusCode == 200 else {\\n        throw URLError(.badServerResponse)\\n    }\\n    \\n    let decoder = JSONDecoder()\\n    return try decoder.decode([Item].self, from: data)\\n}\"\n    - key: \"p\"\n      icon: \"p.square\"\n      title: \"Python\"\n      submenu:\n        - key: \"h\"\n          title: \"HTTP Request\"\n          action: \"text://import requests\\n\\ndef fetch_data(url):\\n    try:\\n        response = requests.get(url)\\n        response.raise_for_status()  # Raise exception for 4XX/5XX responses\\n        return response.json()\\n    except requests.exceptions.RequestException as e:\\n        print(f\\\"Error making request: {e}\\\")\\n        return None\\n\\n# Usage\\ndata = fetch_data(\\\"https://api.example.com/data\\\")\\nif data:\\n    print(data)\"\n        - key: \"c\"\n          title: \"Class Template\"\n          action: \"text://class MyClass:\\n    def __init__(self, name, value):\\n        self.name = name\\n        self.value = value\\n    \\n    def __str__(self):\\n        return f\\\"{self.name}: {self.value}\\\"\\n    \\n    def process(self):\\n        return self.value * 2\\n\\n# Usage\\nobj = MyClass(\\\"Example\\\", 10)\\nprint(obj)\\nresult = obj.process()\\nprint(f\\\"Processed result: {result}\\\")\"\n",
    "previewImageURL": "previews/code-snippets.png"
  },
  {
    "id": "utility/window-management",
    "name": "Window Management",
    "description": "A collection of window management shortcuts to quickly arrange, resize, and position windows on your macOS desktop.",
    "author": "SwiftKey",
    "tags": ["utility", "window", "organization", "productivity"],
    "created": "2024-07-18",
    "content": "# Window management and arrangement shortcuts\n- key: \"w\"\n  icon: \"rectangle.3.group\"\n  title: \"Window Management\"\n  submenu:\n    - key: \"h\"\n      icon: \"rectangle.lefthalf\"\n      title: \"Left Half\"\n      action: \"shell://osascript -e 'tell application \\\"System Events\\\" to set frontApp to name of first application process whose frontmost is true' -e 'tell application \\\"System Events\\\" to tell process frontApp to set position of front window to {0, 22}' -e 'tell application \\\"System Events\\\" to tell process frontApp to set size of front window to {(get screen size's item 1)/2, (get screen size's item 2)-22}'\"\n      notify: true\n    - key: \"l\"\n      icon: \"rectangle.righthalf\"\n      title: \"Right Half\"\n      action: \"shell://osascript -e 'tell application \\\"System Events\\\" to set frontApp to name of first application process whose frontmost is true' -e 'tell application \\\"System Events\\\" to tell process frontApp to set position of front window to {(get screen size's item 1)/2, 22}' -e 'tell application \\\"System Events\\\" to tell process frontApp to set size of front window to {(get screen size's item 1)/2, (get screen size's item 2)-22}'\"\n      notify: true\n    - key: \"f\"\n      icon: \"rectangle.fill\"\n      title: \"Full Screen\"\n      action: \"shell://osascript -e 'tell application \\\"System Events\\\" to set frontApp to name of first application process whose frontmost is true' -e 'tell application \\\"System Events\\\" to tell process frontApp to set position of front window to {0, 22}' -e 'tell application \\\"System Events\\\" to tell process frontApp to set size of front window to {(get screen size's item 1), (get screen size's item 2)-22}'\"\n      notify: true\n    - key: \"q\"\n      icon: \"rectangle.split.4x4\"\n      title: \"Quarters\"\n      submenu:\n        - key: \"1\"\n          title: \"Top Left\"\n          action: \"shell://osascript -e 'tell application \\\"System Events\\\" to set frontApp to name of first application process whose frontmost is true' -e 'tell application \\\"System Events\\\" to tell process frontApp to set position of front window to {0, 22}' -e 'tell application \\\"System Events\\\" to tell process frontApp to set size of front window to {(get screen size's item 1)/2, (get screen size's item 2)/2-11}'\"\n          notify: true\n        - key: \"2\"\n          title: \"Top Right\"\n          action: \"shell://osascript -e 'tell application \\\"System Events\\\" to set frontApp to name of first application process whose frontmost is true' -e 'tell application \\\"System Events\\\" to tell process frontApp to set position of front window to {(get screen size's item 1)/2, 22}' -e 'tell application \\\"System Events\\\" to tell process frontApp to set size of front window to {(get screen size's item 1)/2, (get screen size's item 2)/2-11}'\"\n          notify: true\n        - key: \"3\"\n          title: \"Bottom Left\"\n          action: \"shell://osascript -e 'tell application \\\"System Events\\\" to set frontApp to name of first application process whose frontmost is true' -e 'tell application \\\"System Events\\\" to tell process frontApp to set position of front window to {0, (get screen size's item 2)/2+11}' -e 'tell application \\\"System Events\\\" to tell process frontApp to set size of front window to {(get screen size's item 1)/2, (get screen size's item 2)/2-11}'\"\n          notify: true\n        - key: \"4\"\n          title: \"Bottom Right\"\n          action: \"shell://osascript -e 'tell application \\\"System Events\\\" to set frontApp to name of first application process whose frontmost is true' -e 'tell application \\\"System Events\\\" to tell process frontApp to set position of front window to {(get screen size's item 1)/2, (get screen size's item 2)/2+11}' -e 'tell application \\\"System Events\\\" to tell process frontApp to set size of front window to {(get screen size's item 1)/2, (get screen size's item 2)/2-11}'\"\n          notify: true\n    - key: \"c\"\n      icon: \"move.3d\"\n      title: \"Center\"\n      action: \"shell://osascript -e 'tell application \\\"System Events\\\" to set frontApp to name of first application process whose frontmost is true' -e 'tell application \\\"System Events\\\" to tell process frontApp to set position of front window to {(get screen size's item 1)/2-400, (get screen size's item 2)/2-300}' -e 'tell application \\\"System Events\\\" to tell process frontApp to set size of front window to {800, 600}'\"\n      notify: true",
    "previewImageURL": "previews/window-management.png"
  },
  {
    "id": "utility/search-tools",
    "name": "Search Tools",
    "description": "A collection of search tools and shortcuts for quickly finding information on the web, your Mac, and in specific applications.",
    "author": "SwiftKey",
    "tags": ["utility", "search", "productivity"],
    "created": "2024-07-20",
    "content": "# Search tools and quick lookups\n- key: \"?\"\n  icon: \"magnifyingglass\"\n  title: \"Search Tools\"\n  submenu:\n    - key: \"w\"\n      icon: \"globe\"\n      title: \"Web Search\"\n      submenu:\n        - key: \"g\"\n          title: \"Google\"\n          action: \"shell://read -p 'Search Google for: ' QUERY && open \\\"https://www.google.com/search?q=$QUERY\\\"\"\n          notify: true\n        - key: \"d\"\n          title: \"DuckDuckGo\"\n          action: \"shell://read -p 'Search DuckDuckGo for: ' QUERY && open \\\"https://duckduckgo.com/?q=$QUERY\\\"\"\n          notify: true\n        - key: \"y\"\n          title: \"YouTube\"\n          action: \"shell://read -p 'Search YouTube for: ' QUERY && open \\\"https://www.youtube.com/results?search_query=$QUERY\\\"\"\n          notify: true\n    - key: \"l\"\n      icon: \"folder\"\n      title: \"Local Search\"\n      submenu:\n        - key: \"f\"\n          title: \"Find File by Name\"\n          action: \"shell://osascript -e 'tell application \\\"Finder\\\" to activate' -e 'tell application \\\"System Events\\\" to keystroke \\\"f\\\" using {command down}'\"\n          notify: true\n        - key: \"s\"\n          title: \"Spotlight Search\"\n          action: \"shell://osascript -e 'tell application \\\"System Events\\\" to keystroke space using {command down}'\"\n          notify: true\n        - key: \"t\"\n          title: \"Terminal Find\"\n          action: \"shell://read -p 'Find files matching: ' PATTERN && find . -name \\\"*$PATTERN*\\\" -type f | sort\"\n          notify: true\n    - key: \"d\"\n      icon: \"book\"\n      title: \"Documentation\"\n      submenu:\n        - key: \"a\"\n          title: \"Apple Developer\"\n          action: \"shell://read -p 'Search Apple Developer docs: ' QUERY && open \\\"https://developer.apple.com/search/?q=$QUERY\\\"\"\n          notify: true\n        - key: \"m\"\n          title: \"MDN Web Docs\"\n          action: \"shell://read -p 'Search MDN Web Docs: ' QUERY && open \\\"https://developer.mozilla.org/en-US/search?q=$QUERY\\\"\"\n          notify: true\n        - key: \"s\"\n          title: \"Stack Overflow\"\n          action: \"shell://read -p 'Search Stack Overflow: ' QUERY && open \\\"https://stackoverflow.com/search?q=$QUERY\\\"\"\n          notify: true",
    "previewImageURL": "previews/search-tools.png"
  }
]